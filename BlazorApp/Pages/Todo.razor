@page "/todo"

<h3>Todo list (@todos.Count(todo => !todo.IsDone))</h3>
@* <h6>Number of all subitems : @numOfSubItems</h6> *@


<input placeholder="Somthing Todo" @bind="newTodo"/>
<button @onclick="AddTodo">Add todo</button>
<p>
<input placeholder="Sub Item" @bind="newSubItem"/>
</p>
<ul>
    @foreach (var todo in todos)
    {
        <p>
            <input type="checkbox" @bind="todo.IsDone"/>
            @todo.Title
            <button @onclick="(e) => AddSubItem(todo)">Add Sub Item</button>
            @if (todo.SubItems !=null) 
            {
                <span> Number of sub items: @todo.SubItems.Count() </span>
                @* @(numOfSubItems = todo.SubItems.Count() + numOfSubItems) *@
                <ul> 
                    
                
                    @foreach(var subitem in todo.SubItems)
                    {
                        <li>
                            @subitem
                        </li>
                    }
                
                </ul>
            }
            else {<span> Number of sub items: 0 </span>} 
        </p>
    }
</ul>



@code {

    private List<TodoItem> todos= new();
    private string newTodo;
    private string newSubItem;
    private int numOfSubItems=0;    

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo});
            newTodo=string.Empty;
        }
    }    

    private void AddSubItem(TodoItem currentTodo) 
    {
       if (!string.IsNullOrWhiteSpace(newSubItem)) 
       {
            if (currentTodo.SubItems == null) 
            {
                    currentTodo.SubItems = new List<string>();
            }
            currentTodo.SubItems.Add(newSubItem);
            newSubItem = ""; 
       }
    }



    public class TodoItem 
    {
        public string Title {get; set;}
        public bool IsDone {get; set;}
        public List<string> SubItems {get; set;}
    }
}
